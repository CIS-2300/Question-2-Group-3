# -*- coding: utf-8 -*-
"""Final_Q2ish.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kJOtzds2oZ4W45x_NUH0ZIBGJXkldjk7
"""

import requests
import pandas as pd
import urllib.parse
import sqlite3

url = "https://www.worlddata.info/currencies/strongest-currencies.php"
tables = pd.read_html(url)
df1 = tables[0]
print(df1.head())

print(df1.columns.tolist())

df1.columns = df1.columns.str.strip()

print(df1.columns.tolist())

# Optional: view original column names
print(df1.columns.tolist())

# Rename them to your desired labels
df1.columns = ['Code', 'Currency', 'Country']

# Keep top 30 records
df1 = df1.head(30)

# Display
print(df1)

import requests
import pandas as pd
import time

api_key = "579f7b0ed7a7372374733520"
base_url = f"https://v6.exchangerate-api.com/v6/{api_key}/latest/"

# Currencies you want to extract exchange rates to
target_currencies = ['USD', 'EUR', 'GBP', 'CAD', 'AUD']

df2_data = []

for code in df1['Code']:
    try:
        response = requests.get(base_url + code)
        data = response.json()

        if data['result'] == 'success':
            rates = data['conversion_rates']
            row = {target: rates.get(target, None) for target in target_currencies}
            row['Base'] = code
            df2_data.append(row)
        else:
            df2_data.append({target: None for target in target_currencies} | {'Base': code})

        time.sleep(1)  # Be nice to the API, avoid rate limiting

    except Exception as e:
        print(f"Error for {code}: {e}")
        df2_data.append({target: None for target in target_currencies} | {'Base': code})

# Create DataFrame
df2 = pd.DataFrame(df2_data)

# Merge with df1 (make sure df1['Code'] matches df2['Base'])
df3 = pd.merge(df1, df2, left_on='Code', right_on='Base')
df3.drop(columns=['Base'], inplace=True)

# Show final result
print(df3.head())

# Optionally save to CSV
df3.to_csv("strongest_currencies_with_rates.csv", index=False)

import sqlite3
conn = sqlite3.connect("currency_data.db")
df3.to_sql("currencies", conn, if_exists="replace", index=False)
conn.close()

df3.to_csv("strongest_currencies_with_rates.csv", index=False)

from google.colab import files
files.download("strongest_currencies_with_rates.csv")